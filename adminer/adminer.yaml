apiVersion: v1
kind: Namespace
metadata:
  name: adminer-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adminer
  name: adminer
  namespace: adminer-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adminer
  template:
    metadata:
      labels:
        app: adminer
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - image: adminer:latest
          name: adminer
          resources:
            requests:
              cpu: 10m
          volumeMounts:
            - mountPath: /var/lib/adminerql/data/
              name: data
      hostname: adminer
      volumes:
        - name: data
          emptyDir: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: adminer
  name: adminer
  namespace: adminer-system
spec:
  type: ClusterIP
  ports:
    - name: "adminer"
      protocol: TCP
      port: 8080
      targetPort: 8080
    # nodePort: 35010
  selector:
    app: adminer
status:
  loadBalancer: {}
# ---
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   annotations:
#     kubernetes.io/ingress.class: istio
#   name: adminer
#   namespace: adminer-system
# spec:
#   rules:
#   - host: 
#     - adminer.baskar-mbp-2.com
#     http:
#       paths:
#       - backend:
#           serviceName: adminer
#           servicePort: 8080
---
# apiVersion: networking.istio.io/v1alpha3
# kind: Gateway
# metadata:
#   name: adminer-gateway
#   namespace: adminer-system
# spec:
#   selector:
#     istio: ingressgateway  
#   servers:
#   - port:
#       number: 7080
#       name: adminer
#       protocol: HTTP
#     hosts: 
      # - "*"
---
# apiVersion: networking.istio.io/v1alpha3
# kind: VirtualService
# metadata:
#   name: adminer
#   namespace: adminer-system
# spec:
#   hosts:
#   - "*"
#   gateways:
#   - adminer-gateway
#   http:
#   - match:
#     - uri:
#         prefix: /*
#     route:
#     - destination:
#         port:
#           number: 8080
#         host: adminer
